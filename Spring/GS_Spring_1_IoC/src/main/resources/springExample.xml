<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"

        default-init-method="defaultInit"
        default-destroy-method="defaultDestroy"
        xmlns="http://www.springframework.org/schema/beans"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">


    <!-- Для подлючения аннотаций надо использовать это тэг -->
    <context:annotation-config/>

    <!-- depends-on при прямом ref чаще всего не нужен, но иногда при более сложной цепочке нужен -->
    <bean id="testSpringBean" class="edu.javacourse.spring.bean.SpringTest" depends-on="dependedBean">
        <property name="number" value="1230"/>
        <property name="child" ref="dependedBean"/>
        <property name="otherChild">
            <!-- В случае local (только если бин в этом же файле, проверка 
            будет сразу после загрузки XML. Иначе можно использовать ref bean -->
            <ref local="dependedBean"/>
        </property>
    </bean>

    <bean id="dependedBean" class="edu.javacourse.spring.bean.SpringTestChild">
        <property name="hello" value="Hello, world!"/>
    </bean>

    <!-- Inner bean - Обратить внимание на autowire-candidate="false" и его связь с SpringAnnotated.class -->
    <bean id="outerbean" class="edu.javacourse.spring.bean.SpringTest" autowire-candidate="false">
        <property name="number" value="1230"/>
        <property name="child">
            <bean class="edu.javacourse.spring.bean.SpringTestChild">
                <property name="hello" value="Hello, world from inner bean!"/>
                <!-- 
                     Empty string 
                <property name="hello" value=""/>
                     Null string
                <property name="hello><null/></property>
                -->
            </bean>
        </property>
    </bean>

    <bean id="instanceBean1" class="edu.javacourse.spring.bean.SpringTestInstance" factory-method="getInstance"/>
    <bean id="instanceBean2" class="edu.javacourse.spring.bean.SpringTestInstance" factory-method="getInstance"
          lazy-init="true"/>

    <!-- ATTENTION: Circular dependencies !! -->
    <bean id="constructorBean" class="edu.javacourse.spring.bean.SpringTestConstructor">
        <constructor-arg type="int" value="7500000"/>
        <constructor-arg type="java.lang.String" value="John Smith"/>
        <constructor-arg type="edu.javacourse.spring.bean.SpringTest" ref="testSpringBean"/>
    </bean>


    <bean id="listBean" class="edu.javacourse.spring.bean.SpringList">

        <property name="stringList">
            <list>
                <value>One</value>
                <value>Two</value>
                <value>Three</value>
            </list>
        </property>

    </bean>


    <!-- Вариант инициализации Map в родителе и добавка в потомке - обратить внимание на merge -->
    <bean id="testMapParent" class="edu.javacourse.spring.bean.SpringMap" abstract="true">
        <property name="accounts">
            <map>
                <entry key="one" value="1.11"/>
                <entry key="two" value="2.22"/>
                <entry key="six" value="6.66"/>
            </map>
        </property>
    </bean>
    <bean id="testMap" parent="testMapParent">
        <property name="accounts">
            <!-- MERGE true/false !!! -->
            <map merge="true">
                <entry key="seven" value="7.77"/>
                <entry key="eight" value="8.88"/>
                <entry key="nine" value="9.99"/>
            </map>
        </property>
    </bean>

    <!-- <beans default-init-method="init"> and many-many other -->
    <bean id="init1" class="edu.javacourse.spring.bean.init.InitBean1" init-method="init" destroy-method="cleanup"/>
    <bean id="init2" class="edu.javacourse.spring.bean.init.InitBean2" lazy-init="true" scope=""/>

    <bean id="init3" class="edu.javacourse.spring.bean.init.InitBean3"/>
    <bean id="init4" class="edu.javacourse.spring.bean.init.InitBean4"/>

    <bean id="init5" class="edu.javacourse.spring.bean.init.InitBean5"/>

</beans>