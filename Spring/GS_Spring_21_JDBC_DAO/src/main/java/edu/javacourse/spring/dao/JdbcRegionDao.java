package edu.javacourse.spring.dao;import edu.javacourse.spring.model.Region;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.jdbc.core.RowMapper;import org.springframework.jdbc.core.simple.SimpleJdbcInsert;import java.sql.ResultSet;import java.sql.SQLException;import java.util.HashMap;import java.util.Map;/** * Author: Georgy Gobozov * Date: 21.07.13 */public class JdbcRegionDao implements RegionDao {    @Autowired    private JdbcTemplate jdbcTemplate;    private SimpleJdbcInsert insert;    @Override    public Integer createRegion(Region region) {        //String sql = "INSERT INTO jc_region (region_name) VALUES (?)";        insert = new SimpleJdbcInsert(jdbcTemplate).withTableName("jc_region").usingGeneratedKeyColumns("region_id");        Map<String, Object> parameters = new HashMap<String, Object>();        parameters.put("region_name", region.getName());        Number newId = insert.executeAndReturnKey(parameters);        return newId.intValue();    }    @Override    public void deleteRegion(Region region) {        String sql = "DELETE FROM jc_region where region_id = ?";        jdbcTemplate.update(sql, new Object[]{region.getId()});    }    @Override    public Region getRegionByName(String name) {        String sql = "SELECT * FROM jc_region where region_name=?";        return jdbcTemplate.queryForObject(sql, new RegionMapper(), new Object[]{name});    }    private static class RegionMapper implements RowMapper<Region> {        public Region mapRow(ResultSet rs, int rowNum) throws SQLException {            Region region = new Region();            region.setId(rs.getInt("region_id"));            region.setName(rs.getString("region_name"));            return region;        }    }}